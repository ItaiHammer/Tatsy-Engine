{"version":3,"sources":["engine/engine.js","animation1.js","example.js"],"names":["scene","canvas","document","createElement","elements","clear","context","clearRect","width","height","start","data","getContext","handleColor","color","drawRect","Rect","name","positionX","positionY","sizeX","sizeY","update","position","x","y","size","fillStyle","draw","fillRect","push","forEach","element","drawPath","Path","startPos","paths","beginPath","moveTo","path","lineTo","strokeStyle","stroke","drawArc","drawCounterClockWise","Arc","radius","startAng","endAng","fill","arc","findElementByName","foundElement","i","startAnimation","frameRate","animation","setInterval","sceneParent","append","animation1","body","innerWidth","innerHeight","mouse","colorArray","window","addEventListener","e","ballCount","vx","Math","random","vy","minRadius","maxRadius","interactionDistance","PI","floor","length","animations","onload"],"mappings":"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","file":"example.438d3af2.js","sourceRoot":"..","sourcesContent":["let scene = {\r\n    canvas: document.createElement('canvas'),\r\n    elements: [],\r\n    clear: () => {\r\n        scene.context.clearRect(0, 0, scene.canvas.width, scene.canvas.height);\r\n    },\r\n    start: (data) => {\r\n        //setting up canvas\r\n        if (data.width != null) {\r\n            scene.canvas.width = data.width;\r\n        }\r\n        if (data.height != null) {\r\n            scene.canvas.height = data.height;\r\n        }\r\n        scene.context = scene.canvas.getContext('2d');\r\n        const context = scene.context;\r\n\r\n        //handling functions\r\n\r\n        scene.handleColor = (color) => {\r\n            return color == null || color === '' ? 'black' : color;\r\n        };\r\n        const handleColor = scene.handleColor;\r\n\r\n        //drawing functions\r\n        //drawing rectangle\r\n        scene.drawRect = (data) => {\r\n            function Rect(\r\n                name,\r\n                positionX,\r\n                positionY,\r\n                sizeX,\r\n                sizeY,\r\n                color,\r\n                update\r\n            ) {\r\n                this.name = name;\r\n                this.position = { x: positionX, y: positionY };\r\n                this.size = { x: sizeX, y: sizeY };\r\n                this.color = handleColor(data.color);\r\n\r\n                context.fillStyle = this.color;\r\n\r\n                this.draw = () => {\r\n                    context.fillRect(\r\n                        this.position.x,\r\n                        this.position.y,\r\n                        this.size.x,\r\n                        this.size.y\r\n                    );\r\n                };\r\n\r\n                this.update =\r\n                    update == null\r\n                        ? () => {\r\n                              this.draw();\r\n                          }\r\n                        : update;\r\n            }\r\n\r\n            scene.elements.push(\r\n                new Rect(\r\n                    data.name,\r\n                    data.position.x,\r\n                    data.position.y,\r\n                    data.size.x,\r\n                    data.size.y,\r\n                    data.color,\r\n                    data.update\r\n                )\r\n            );\r\n\r\n            //drawing everything on the scene\r\n            scene.elements.forEach((element) => element.draw());\r\n        };\r\n\r\n        //drawing line\r\n        scene.drawPath = (data) => {\r\n            //handling color\r\n            data.color = handleColor(data.color);\r\n\r\n            function Path(name, startPos, paths, color, update) {\r\n                this.name = name;\r\n                this.startPos = startPos;\r\n                this.paths = paths;\r\n                this.color = color;\r\n\r\n                this.draw = () => {\r\n                    context.beginPath();\r\n                    context.moveTo(startPos.x, startPos.y);\r\n                    data.paths.forEach((path) => {\r\n                        context.lineTo(path.x, path.y);\r\n                    });\r\n\r\n                    context.strokeStyle = color;\r\n\r\n                    context.stroke();\r\n                };\r\n\r\n                this.update =\r\n                    update == null\r\n                        ? () => {\r\n                              this.draw();\r\n                          }\r\n                        : update;\r\n            }\r\n\r\n            scene.elements.push(\r\n                new Path(\r\n                    data.name,\r\n                    data.startPos,\r\n                    data.paths,\r\n                    data.color,\r\n                    data.update\r\n                )\r\n            );\r\n\r\n            //drawing everything on the scene\r\n            scene.elements.forEach((element) => element.draw());\r\n        };\r\n\r\n        //drawing arc\r\n        scene.drawArc = (data) => {\r\n            data.drawCounterClockWise =\r\n                data.drawCounterClockWise == null\r\n                    ? false\r\n                    : data.drawCounterClockWise;\r\n\r\n            function Arc(\r\n                name,\r\n                position,\r\n                radius,\r\n                startAng,\r\n                endAng,\r\n                drawCounterClockWise,\r\n                color,\r\n                fill,\r\n                update\r\n            ) {\r\n                this.name = name;\r\n                this.position = position;\r\n                this.radius = radius;\r\n                this.startAng = startAng;\r\n                this.endAng = endAng;\r\n                this.drawCounterClockWise = drawCounterClockWise;\r\n                this.color = color;\r\n                this.fill = fill;\r\n\r\n                this.draw = () => {\r\n                    context.beginPath();\r\n                    context.arc(\r\n                        this.position.x,\r\n                        this.position.y,\r\n                        this.radius,\r\n                        this.startAng,\r\n                        this.endAng,\r\n                        this.drawCounterClockWise\r\n                    );\r\n                    if (this.color != null) {\r\n                        context.strokeStyle = this.color;\r\n                        context.stroke();\r\n                    }\r\n                    if (this.fill != null) {\r\n                        context.fillStyle = this.fill;\r\n                        context.fill();\r\n                    }\r\n                };\r\n\r\n                this.update =\r\n                    update == null\r\n                        ? () => {\r\n                              this.draw();\r\n                          }\r\n                        : update;\r\n            }\r\n\r\n            scene.elements.push(\r\n                new Arc(\r\n                    data.name,\r\n                    data.position,\r\n                    data.radius,\r\n                    data.startAng,\r\n                    data.endAng,\r\n                    data.drawCounterClockWise,\r\n                    data.color,\r\n                    data.fill,\r\n                    data.update\r\n                )\r\n            );\r\n\r\n            //finding functions\r\n            scene.findElementByName = (name) => {\r\n                let foundElement = false;\r\n                let i = 0;\r\n\r\n                scene.elements.forEach((element) => {\r\n                    if (element.name === name) {\r\n                        foundElement = true;\r\n                    } else if (foundElement === false) {\r\n                        i++;\r\n                    }\r\n                });\r\n\r\n                if (foundElement === true) {\r\n                    return scene.elements[i];\r\n                } else {\r\n                    return null;\r\n                }\r\n            };\r\n\r\n            //drawing everything on the scene\r\n            scene.elements.forEach((element) => element.draw());\r\n        };\r\n\r\n        //animation functions\r\n        scene.startAnimation = (frameRate, animation) => {\r\n            setInterval(() => {\r\n                scene.clear();\r\n                if (animation != null) {\r\n                    animation();\r\n                }\r\n                //drawing everything on the scene\r\n                scene.elements.forEach((element) => element.update(element));\r\n            }, 1000 / frameRate);\r\n        };\r\n\r\n        //appending canvas into the DOM\r\n        data.sceneParent.append(scene.canvas);\r\n    },\r\n};\r\n\r\nexport default scene;\r\n","import scene from './engine/engine.js';\r\n\r\nfunction animation1() {\r\n    scene.start({\r\n        sceneParent: document.body,\r\n        width: innerWidth,\r\n        height: innerHeight,\r\n    });\r\n\r\n    let mouse = {\r\n        x: -100,\r\n        y: -100,\r\n    };\r\n\r\n    const colorArray = ['#d9d2ea', '#4c0490', '#36026a', '#6206b6', '#7b6b92'];\r\n\r\n    window.addEventListener('mousemove', (e) => {\r\n        mouse.x = e.x;\r\n        mouse.y = e.y;\r\n    });\r\n\r\n    const ballCount = 1500;\r\n\r\n    for (let i = 0; ballCount > i; i++) {\r\n        let vx = (Math.random() - 0.5) * 2;\r\n        let vy = (Math.random() - 0.5) * 2;\r\n        let minRadius = Math.random() * 6 + 2;\r\n        let maxRadius = Math.random() * 30 + 20;\r\n        let interactionDistance = 50;\r\n\r\n        scene.drawArc({\r\n            position: {\r\n                x: Math.random() * scene.canvas.width - 30,\r\n                y: Math.random() * scene.canvas.height - 30,\r\n            },\r\n            radius: minRadius,\r\n            startAng: 0,\r\n            endAng: Math.PI * 2,\r\n            fill: colorArray[Math.floor(Math.random() * colorArray.length)],\r\n            update: (element) => {\r\n                if (\r\n                    element.position.x + element.radius > scene.canvas.width ||\r\n                    element.position.x - element.radius < 0\r\n                ) {\r\n                    vx = -vx;\r\n                }\r\n                if (\r\n                    element.position.y + element.radius > scene.canvas.height ||\r\n                    element.position.y - element.radius < 0\r\n                ) {\r\n                    vy = -vy;\r\n                }\r\n\r\n                element.position.x += vx;\r\n                element.position.y += vy;\r\n\r\n                //interaction\r\n                if (\r\n                    mouse.x - element.position.x < interactionDistance &&\r\n                    mouse.x - element.position.x > -interactionDistance &&\r\n                    mouse.y - element.position.y < interactionDistance &&\r\n                    mouse.y - element.position.y > -interactionDistance &&\r\n                    element.radius < maxRadius\r\n                ) {\r\n                    element.radius++;\r\n                } else if (element.radius > minRadius) {\r\n                    element.radius--;\r\n                }\r\n\r\n                element.draw();\r\n            },\r\n        });\r\n    }\r\n\r\n    scene.startAnimation(60, () => {\r\n        scene.canvas.width = innerWidth;\r\n        scene.canvas.height = innerHeight;\r\n    });\r\n}\r\n\r\nexport default animation1;\r\n","import animation1 from './animation1.js';\r\n\r\nconst animations = [animation1];\r\n\r\nwindow.onload = () =>\r\n    animations[Math.floor(Math.random() * animations.length)]();\r\n"]}