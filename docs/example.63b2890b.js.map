{"version":3,"sources":["engine/engine.js","example.js"],"names":["scene","canvas","document","createElement","clear","context","clearRect","width","height","start","data","getContext","handleColor","color","drawRect","Rect","positionX","positionY","sizeX","sizeY","position","x","y","size","fillStyle","fillRect","drawPath","Path","startPos","paths","beginPath","moveTo","forEach","path","lineTo","strokeStyle","stroke","drawArc","drawCounterClockWise","Arc","radius","startAng","endAng","fill","arc","setAnimation","animation","frameRate","setInterval","sceneParent","append","startGame","body","mouse","colorArray","window","addEventListener","e","circleArray","Circle","initalX","initalY","velocityX","velocityY","minRadius","maxRadius","vx","vy","draw","Math","PI","update","interactionDistance","ballCount","i","push","random","floor","length","onload"],"mappings":"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","file":"example.63b2890b.js","sourceRoot":"..","sourcesContent":["let scene = {\r\n    canvas: document.createElement('canvas'),\r\n    clear: () => {\r\n        scene.context.clearRect(0, 0, scene.canvas.width, scene.canvas.height);\r\n    },\r\n    start: (data) => {\r\n        //setting up canvas\r\n        scene.canvas.width = data.width;\r\n        scene.canvas.height = data.height;\r\n        scene.context = scene.canvas.getContext('2d');\r\n        const context = scene.context;\r\n\r\n        //handling functions\r\n\r\n        scene.handleColor = (color) => {\r\n            return color == null || color === '' ? 'black' : color;\r\n        };\r\n        const handleColor = scene.handleColor;\r\n\r\n        //drawing functions\r\n        //drawing rectangle\r\n        scene.drawRect = (data) => {\r\n            const color = handleColor(data.color);\r\n\r\n            function Rect(positionX, positionY, sizeX, sizeY, color) {\r\n                this.position = { x: positionX, y: positionY };\r\n                this.size = { x: sizeX, y: sizeY };\r\n                this.color = color;\r\n\r\n                context.fillStyle = this.color;\r\n                context.fillRect(\r\n                    this.position.x,\r\n                    this.position.y,\r\n                    this.size.x,\r\n                    this.size.y\r\n                );\r\n            }\r\n\r\n            new Rect(\r\n                data.position.x,\r\n                data.position.y,\r\n                data.size.x,\r\n                data.size.y,\r\n                color\r\n            );\r\n        };\r\n\r\n        //drawing line\r\n        scene.drawPath = (data) => {\r\n            //handling color\r\n            data.color = handleColor(data.color);\r\n\r\n            function Path(startPos, paths, color) {\r\n                this.startPos = startPos;\r\n                this.paths = paths;\r\n                this.color = color;\r\n\r\n                context.beginPath();\r\n                context.moveTo(startPos.x, startPos.y);\r\n                data.paths.forEach((path) => {\r\n                    context.lineTo(path.x, path.y);\r\n                });\r\n\r\n                context.strokeStyle = color;\r\n\r\n                context.stroke();\r\n            }\r\n\r\n            Path(data.startPos, data.paths, data.color);\r\n        };\r\n\r\n        //drawing arc\r\n        scene.drawArc = (data) => {\r\n            data.drawCounterClockWise =\r\n                data.drawCounterClockWise == null\r\n                    ? false\r\n                    : data.drawCounterClockWise;\r\n\r\n            function Arc(\r\n                position,\r\n                radius,\r\n                startAng,\r\n                endAng,\r\n                drawCounterClockWise,\r\n                color,\r\n                fill\r\n            ) {\r\n                this.position = position;\r\n                this.radius = radius;\r\n                this.startAng = startAng;\r\n                this.endAng = endAng;\r\n                this.drawCounterClockWise = drawCounterClockWise;\r\n                this.color = color;\r\n                this.fill = fill;\r\n\r\n                context.beginPath();\r\n                context.arc(\r\n                    this.position.x,\r\n                    this.position.y,\r\n                    this.radius,\r\n                    this.startAng,\r\n                    this.endAng,\r\n                    this.drawCounterClockWise\r\n                );\r\n                if (this.color != null) {\r\n                    context.strokeStyle = this.color;\r\n                    context.stroke();\r\n                }\r\n                if (this.fill != null) {\r\n                    context.fillStyle = this.fill;\r\n                    context.fill();\r\n                }\r\n            }\r\n\r\n            new Arc(\r\n                data.position,\r\n                data.radius,\r\n                data.startAng,\r\n                data.endAng,\r\n                data.drawCounterClockWise,\r\n                data.color,\r\n                data.fill\r\n            );\r\n        };\r\n\r\n        //animation functions\r\n        scene.setAnimation = (animation, frameRate) => {\r\n            setInterval(() => {\r\n                scene.clear();\r\n                animation();\r\n            }, 1000 / frameRate);\r\n        };\r\n\r\n        //appending canvas into the DOM\r\n        data.sceneParent.append(scene.canvas);\r\n    },\r\n};\r\n\r\nexport default scene;\r\n","import scene from './engine/engine.js';\r\n\r\nfunction startGame() {\r\n    scene.start({\r\n        sceneParent: document.body,\r\n        width: 800,\r\n        height: 400,\r\n    });\r\n\r\n    let mouse = {\r\n        x: null,\r\n        y: null,\r\n    };\r\n\r\n    const colorArray = ['#d9d2ea', '#4c0490', '#36026a', '#6206b6', '#7b6b92'];\r\n\r\n    window.addEventListener('mousemove', (e) => {\r\n        mouse.x = e.x;\r\n        mouse.y = e.y;\r\n    });\r\n\r\n    let circleArray = [];\r\n\r\n    function Circle(\r\n        initalX,\r\n        initalY,\r\n        velocityX,\r\n        velocityY,\r\n        minRadius,\r\n        maxRadius,\r\n        fill\r\n    ) {\r\n        this.x = initalX;\r\n        this.vx = velocityX;\r\n\r\n        this.y = initalY;\r\n        this.vy = velocityY;\r\n\r\n        this.radius = minRadius;\r\n        this.fill = fill;\r\n        this.minRadius = minRadius;\r\n        this.maxRadius = maxRadius;\r\n\r\n        this.draw = () => {\r\n            scene.drawArc({\r\n                position: { x: this.x, y: this.y },\r\n                size: { x: 100, y: 100 },\r\n                radius: this.radius,\r\n                startAng: 0,\r\n                endAng: Math.PI * 2,\r\n                fill: this.fill,\r\n            });\r\n        };\r\n\r\n        this.update = () => {\r\n            if (\r\n                this.x + this.radius > scene.canvas.width ||\r\n                this.x - this.radius < 0\r\n            ) {\r\n                this.vx = -this.vx;\r\n            }\r\n            if (\r\n                this.y + this.radius > scene.canvas.height ||\r\n                this.y - this.radius < 0\r\n            ) {\r\n                this.vy = -this.vy;\r\n            }\r\n\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n\r\n            //interaction\r\n            this.interactionDistance = 60;\r\n            if (\r\n                mouse.x - this.x < this.interactionDistance &&\r\n                mouse.x - this.x > -this.interactionDistance &&\r\n                mouse.y - this.y < this.interactionDistance &&\r\n                mouse.y - this.y > -this.interactionDistance &&\r\n                this.radius < this.maxRadius\r\n            ) {\r\n                this.radius += 1;\r\n            } else if (this.radius > this.minRadius) {\r\n                this.radius -= 1;\r\n            }\r\n\r\n            this.draw();\r\n        };\r\n    }\r\n\r\n    const ballCount = 800;\r\n\r\n    for (let i = 0; i < ballCount; i++) {\r\n        circleArray.push(\r\n            new Circle(\r\n                Math.random() * scene.canvas.width - 60 + 30,\r\n                Math.random() * scene.canvas.width - 60 + 30,\r\n                (Math.random() - 0.5) * 2,\r\n                (Math.random() - 0.5) * 2,\r\n                Math.random() * 6 + 2,\r\n                Math.random() * 30 + 20,\r\n                colorArray[Math.floor(Math.random() * colorArray.length)]\r\n            )\r\n        );\r\n    }\r\n\r\n    scene.setAnimation(() => {\r\n        for (let i = 0; i < ballCount; i++) {\r\n            circleArray[i].update();\r\n        }\r\n        // circleArray[1].update();\r\n    }, 60);\r\n}\r\n\r\ndocument.body.onload = startGame();\r\n"]}