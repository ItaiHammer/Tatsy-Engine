{"version":3,"sources":["engine.js","example.js"],"names":["scene","valueHasNotBeenSetMessage","canvas","document","createElement","elements","handleName","valueHasNotBeenSet","handleColor","handlePosition","handleXCord","handleYCord","drawRect","drawPath","drawArc","start","data","width","height","context","getContext","name","length","color","position","x","y","fillStyle","fillRect","size","startPos","startPosition","beginPath","moveTo","paths","forEach","path","lineTo","strokeStyle","stroke","radius","startAng","startAngle","endAng","endAngle","drawCounterClockWise","arc","sceneParent","append","startGame","console","log","body","Math","PI"],"mappings":"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","file":"example.59a0756f.js","sourceRoot":"..","sourcesContent":["const valueHasNotBeenSetMessage = 'value has not been set';\r\n\r\nlet scene = {\r\n  canvas: document.createElement('canvas'),\r\n  elements: [],\r\n  //handling functions\r\n  handleName: () => {\r\n    return valueHasNotBeenSet;\r\n  },\r\n  handleColor: () => {\r\n    return valueHasNotBeenSet;\r\n  },\r\n  handlePosition: () => {\r\n    return valueHasNotBeenSet;\r\n  },\r\n  handleXCord: () => {\r\n    return valueHasNotBeenSet;\r\n  },\r\n  handleYCord: () => {\r\n    return valueHasNotBeenSet;\r\n  },\r\n  //drawing functions\r\n  drawRect: () => {\r\n    return valueHasNotBeenSetMessage;\r\n  },\r\n  drawPath: () => {\r\n    return valueHasNotBeenSetMessage;\r\n  },\r\n  drawArc: () => {\r\n    return valueHasNotBeenSetMessage;\r\n  },\r\n  start: (data) => {\r\n    //setting canvas values\r\n    scene.canvas.width = data.width;\r\n    scene.canvas.height = data.height;\r\n    scene.context = scene.canvas.getContext('2d');\r\n    const context = scene.context;\r\n\r\n    //scene functions\r\n    function addToScene(name, element) {\r\n      scene.elements.push({ name, element });\r\n    }\r\n\r\n    //handling element variables\r\n    scene.handleName = (name) => {\r\n      return name == null || name === ''\r\n        ? `element${scene.elements.length}`\r\n        : name;\r\n    };\r\n    const handleName = scene.handleName;\r\n\r\n    scene.handleColor = (color) => {\r\n      return color == null || color === '' ? 'black' : color;\r\n    };\r\n    const handleColor = scene.handleColor;\r\n\r\n    scene.handlePosition = (position) => {\r\n      return position.x == null ||\r\n        position.y == null ||\r\n        position.x > scene.canvas.width ||\r\n        position.y > position.canvas.height\r\n        ? { x: 0, y: 0 }\r\n        : position;\r\n    };\r\n    const handlePosition = scene.handlePosition;\r\n\r\n    scene.handleXCord = (x) => {\r\n      return x == null || x > scene.canvas.width ? 0 : x;\r\n    };\r\n    const handleXCord = scene.handleXCord;\r\n\r\n    scene.handleYCord = (y) => {\r\n      return y == null || y > scene.canvas.height ? 0 : y;\r\n    };\r\n    const handleYCord = scene.handleYCord;\r\n\r\n    //drawing function\r\n    scene.drawRect = (data) => {\r\n      //handling color\r\n      const color = handleColor(data.color);\r\n      context.fillStyle = color;\r\n\r\n      //handling name\r\n      const name = handleName(data.name);\r\n\r\n      context.fillRect(\r\n        data.position.x,\r\n        data.position.y,\r\n        data.size.x,\r\n        data.size.y\r\n      );\r\n    };\r\n\r\n    scene.drawPath = (data) => {\r\n      //handling color\r\n      const color = handleColor(data.color);\r\n\r\n      //handling name\r\n      const name = handleName(data.name);\r\n      const startPos = data.startPos || data.startPosition;\r\n\r\n      context.beginPath();\r\n      context.moveTo(startPos.x, startPos.y);\r\n      data.paths.forEach((path) => {\r\n        context.lineTo(path.x, path.y);\r\n      });\r\n\r\n      context.strokeStyle = color;\r\n\r\n      context.stroke();\r\n    };\r\n\r\n    scene.drawArc = (data) => {\r\n      //handling color\r\n      const color = handleColor(data.color);\r\n\r\n      //handling name\r\n      const name = handleName(data.name);\r\n\r\n      const position = data.position;\r\n      const radius = data.radius;\r\n      const startAng = data.startAng || data.startAngle;\r\n      const endAng = data.endAng || data.endAngle;\r\n      const drawCounterClockWise =\r\n        data.drawCounterClockWise == null ? false : data.drawCounterClockWise;\r\n\r\n      context.beginPath();\r\n      context.arc(\r\n        position.x,\r\n        position.y,\r\n        radius,\r\n        startAng,\r\n        endAng,\r\n        drawCounterClockWise\r\n      );\r\n      context.strokeStyle = color;\r\n      context.stroke();\r\n    };\r\n\r\n    //appending canvas into the DOM\r\n    data.sceneParent.append(scene.canvas);\r\n  },\r\n};\r\n\r\nexport default scene;\r\n","import scene from './engine.js';\r\n\r\nfunction startGame() {\r\n  console.log(scene);\r\n  scene.start({ sceneParent: document.body, width: 400, height: 400 });\r\n  scene.drawRect({\r\n    position: { x: 100, y: 100 },\r\n    size: { x: 200, y: 100 },\r\n    color: 'red',\r\n  });\r\n\r\n  scene.drawPath({\r\n    startPos: { x: 50, y: 50 },\r\n    paths: [\r\n      { x: 10, y: 60 },\r\n      { x: 10, y: 40 },\r\n      { x: 90, y: 120 },\r\n    ],\r\n  });\r\n\r\n  scene.drawArc({\r\n    position: { x: 200, y: 300 },\r\n    radius: 30,\r\n    startAngle: 0,\r\n    endAngle: Math.PI * 2,\r\n    color: 'green',\r\n  });\r\n}\r\n\r\nstartGame();\r\n"]}